<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TwainDotNet</name>
    </assembly>
    <members>
        <member name="F:TwainDotNet.Capability.log">
            <summary>
            The logger for this class.
            </summary>
        </member>
        <member name="M:TwainDotNet.DataSource.NegotiatePageSize(TwainDotNet.ScanSettings)">
            <summary>
            Negotiates the size of the page.
            </summary>
            <param name="scanSettings">The scan settings.</param>
        </member>
        <member name="M:TwainDotNet.DataSource.NegotiateAutomaticRotate(TwainDotNet.ScanSettings)">
            <summary>
            Negotiates the automatic rotation capability.
            </summary>
            <param name="scanSettings">The scan settings.</param>
        </member>
        <member name="M:TwainDotNet.DataSource.NegotiateAutomaticBorderDetection(TwainDotNet.ScanSettings)">
            <summary>
            Negotiates the automatic border detection capability.
            </summary>
            <param name="scanSettings">The scan settings.</param>
        </member>
        <member name="M:TwainDotNet.DataSource.NegotiateProgressIndicator(TwainDotNet.ScanSettings)">
            <summary>
            Negotiates the indicator.
            </summary>
            <param name="scanSettings">The scan settings.</param>
        </member>
        <member name="M:TwainDotNet.DataSource.Open(TwainDotNet.ScanSettings,System.Boolean)">
            <summary>
            先open data source進入state 4，然後才做Capability Negotiation
            </summary>
            <param name="settings"></param>
            <param name="useMemoryMode"></param>
            <returns></returns>
        </member>
        <member name="M:TwainDotNet.DataSource.CalibrateA8">
            <summary>
            A8專用的校正，需要先select一個data source且先Open source。
            </summary>
        </member>
        <member name="M:TwainDotNet.DataSource.A8NeedCalibrate">
            <summary>
            A8是否需要校正，需要先select一個data source且先Open source。
            </summary>
        </member>
        <member name="M:TwainDotNet.DataSource.OpenSource">
            <summary>
            打開DS，進入State 4以溝通Capabilities
            </summary>
            <exception cref="T:TwainDotNet.DeviceOpenExcetion">當DS被其他人占用的時候可能會擲回，或twain DLL沒有錯誤，但是回傳值失敗的話就會擲回</exception>
        </member>
        <member name="M:TwainDotNet.DataSource.Enable(TwainDotNet.ScanSettings)">
            <summary>
            接下來就交給source控制這個流程。MSG_XFERREADY, MSG_CLOSEDSREQ, or MSG_CLOSEDSOK messages會傳回來，其中MSG_XFERREADY代表source準備好從state 5→6。
            </summary>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="M:TwainDotNet.DataSource.GetDefault(TwainDotNet.TwainNative.Identity,TwainDotNet.IWindowsMessageHook)">
            <summary>
            Get default data source.
            </summary>
            <param name="applicationId"></param>
            <param name="messageHook"></param>
            <returns></returns>
        </member>
        <member name="F:TwainDotNet.DataSourceManager.log">
            <summary>
            The logger for this class.
            </summary>
        </member>
        <member name="M:TwainDotNet.DataSourceManager.#ctor(TwainDotNet.TwainNative.Identity,TwainDotNet.IWindowsMessageHook)">
            <summary>
            建立DataSourceManager (twain state 2->3)，準備好windows massage hook(還沒取走)
            </summary>
            <param name="applicationId"></param>
            <param name="messageHook"></param>
        </member>
        <member name="E:TwainDotNet.DataSourceManager.ScanningComplete">
            <summary>
            Notification that the scanning has completed.
            </summary>
        </member>
        <member name="M:TwainDotNet.DataSourceManager.StartScan(TwainDotNet.ScanSettings)">
            <summary>
            做open→設定各種CAPABILITY→EnableDS→等回傳圖→end
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:TwainDotNet.DataSourceManager.IsPaperOn">
            <summary>
            偵測有沒有紙，需要先select一個data source。
            </summary>
            <returns></returns>
        </member>
        <member name="M:TwainDotNet.DataSourceManager.CalibrateA8">
            <summary>
            A8專用的校正，需要先select一個data source。
            </summary>
            <returns></returns>
        </member>
        <member name="M:TwainDotNet.DataSourceManager.A8NeedCalibrate">
            <summary>
            A8是否需要校正，需要先select一個data source。
            </summary>
            <returns></returns>
        </member>
        <member name="M:TwainDotNet.DataSourceManager.FilterMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
            <summary>
            While the application has the Source enabled, 
            the application is forwarding all events in its event loop to the Source 
            by using the DG_CONTROL / DAT_EVENT / MSG_PROCESSEVENT operation.
            </summary>
            <param name="hwnd"></param>
            <param name="msg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <param name="handled"></param>
            <returns></returns>
        </member>
        <member name="M:TwainDotNet.DataSourceManager.ShiftPixels(TwainDotNet.TwainNative.ImageMemXfer@,System.Int32)">
            <summary>
            把imageMemXfer.Memory內的記憶體向右移動
            </summary>
            <param name="imageMemXfer"></param>
            <param name="bytePerPixel"></param>
        </member>
        <member name="M:TwainDotNet.DataSourceManager.GetCropHeight(System.Drawing.Bitmap)">
            <summary>
            算出圖片尾端黑色+(70,70,70)灰色的總高度
            </summary>
            <param name="bmp"></param>
            <returns></returns>
        </member>
        <member name="M:TwainDotNet.DataSourceManager.cropImage(System.Drawing.Bitmap,System.Int32)">
            <summary>
            切掉圖片的尾端指定高度
            </summary>
        </member>
        <member name="P:TwainDotNet.IWindowsMessageHook.UseFilter">
            <summary>
            Gets or sets if the message filter is in use.
            當此值被設為true，FilterMessageCallback就會丟給source，攔截一切app內的windows message。
            </summary>
        </member>
        <member name="P:TwainDotNet.IWindowsMessageHook.FilterMessageCallback">
            <summary>
            The delegate to call back then the filter is in place and a message arrives.
            </summary>
        </member>
        <member name="P:TwainDotNet.IWindowsMessageHook.WindowHandle">
            <summary>
            The handle to the window that is performing the scanning.
            </summary>
        </member>
        <member name="T:TwainDotNet.PageSettings">
            <summary>
            Page settings used for automatic document feeders
            scanning.
            </summary>
        </member>
        <member name="P:TwainDotNet.PageSettings.Orientation">
            <summary>
            Gets or sets the page orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="P:TwainDotNet.PageSettings.Size">
            <summary>
            Gets or sets the Page Size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="F:TwainDotNet.PageSettings.Default">
            <summary>
            Default Page setup - A4 Letter and Portrait orientation
            </summary>
        </member>
        <member name="P:TwainDotNet.ResolutionSettings.Dpi">
            <summary>
            The DPI to scan at. Set to null to use the current default setting.
            </summary>
        </member>
        <member name="P:TwainDotNet.ResolutionSettings.ColourSetting">
            <summary>
            The colour settings to use.
            </summary>
        </member>
        <member name="F:TwainDotNet.ResolutionSettings.Fax">
            <summary>
            Fax quality resolution.
            </summary>
        </member>
        <member name="F:TwainDotNet.ResolutionSettings.Photocopier">
            <summary>
            Photocopier quality resolution.
            </summary>
        </member>
        <member name="F:TwainDotNet.ResolutionSettings.ColourPhotocopier">
            <summary>
            Colour photocopier quality resolution.
            </summary>
        </member>
        <member name="T:TwainDotNet.RotationSettings">
            <summary>
            Settings for hardware image rotation.  Includes
            hardware deskewing detection
            </summary>
        </member>
        <member name="P:TwainDotNet.RotationSettings.AutomaticDeskew">
            <summary>
            Gets or sets a value indicating whether [automatic deskew].
            </summary>
            <value><c>true</c> if [automatic deskew]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwainDotNet.RotationSettings.AutomaticBorderDetection">
            <summary>
            Gets or sets a value indicating whether [automatic border detection].
            </summary>
            <value>
            	<c>true</c> if [automatic border detection]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:TwainDotNet.RotationSettings.AutomaticRotate">
            <summary>
            Gets or sets a value indicating whether [automatic rotate].
            </summary>
            <value><c>true</c> if [automatic rotate]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwainDotNet.RotationSettings.FlipSideRotation">
            <summary>
            Gets or sets the flip side rotation.
            </summary>
            <value>The flip side rotation.</value>
        </member>
        <member name="F:TwainDotNet.ScanSettings.Contrast">
            <summary>
            The contrast values available within the Source. -1000~1000, default value is 0.
            </summary>
        </member>
        <member name="P:TwainDotNet.ScanSettings.ShowTwainUI">
            <summary>
            Indicates if the TWAIN/driver user interface should be used to pick the scan settings.
            </summary>
        </member>
        <member name="P:TwainDotNet.ScanSettings.ShowProgressIndicatorUI">
            <summary>
            Gets or sets a value indicating whether [show progress indicator ui].
            If TRUE, the Source will display a progress indicator during acquisition and transfer, regardless of whether the Source's user interface is active. 
            If FALSE, the progress indicator will be suppressed if the Source's user interface is inactive.
            The Source will continue to display device-specific instructions and error messages even with the Source user interface and progress indicators turned off. 
            </summary>
            <value><c>true</c> if [show progress indicator ui]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:TwainDotNet.ScanSettings.UseDocumentFeeder">
            <summary>
            Indicates if the automatic document feeder (ADF) should be the source of the document(s) to scan.
            </summary>
        </member>
        <member name="P:TwainDotNet.ScanSettings.UseAutoFeeder">
            <summary>
            Indicates if the automatic document feeder (ADF) should continue feeding document(s) to scan after the negotiated number of pages are acquired.
            UseDocumentFeeder must be true
            </summary>
        </member>
        <member name="P:TwainDotNet.ScanSettings.UseAutoScanCache">
            <summary>
            Indicates if the source should continue scanning without waiting for the application to request the image transfers.
            </summary>
        </member>
        <member name="P:TwainDotNet.ScanSettings.AbortWhenNoPaperDetectable">
            <summary>
            Indicates if the transfer should not start when no paper was detected (e.g. by the ADF).
            </summary>
        </member>
        <member name="P:TwainDotNet.ScanSettings.TransferCount">
            <summary>
            The number of pages to transfer.
            </summary>
        </member>
        <member name="P:TwainDotNet.ScanSettings.ShouldTransferAllPages">
            <summary>
            Indicates if all pages should be transferred.
            </summary>
        </member>
        <member name="P:TwainDotNet.ScanSettings.Resolution">
            <summary>
            The resolution settings. Set null to use current defaults.
            </summary>
        </member>
        <member name="P:TwainDotNet.ScanSettings.UseDuplex">
            <summary>
            Whether to use duplexing (Dual Page), if supported.
            </summary>
        </member>
        <member name="P:TwainDotNet.ScanSettings.Page">
            <summary>
            The page / paper settings. Set null to use current defaults.
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:TwainDotNet.ScanSettings.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
            <value>The rotation.</value>
        </member>
        <member name="F:TwainDotNet.ScanSettings.Default">
            <summary>
            Default scan settings.
            </summary>
        </member>
        <member name="F:TwainDotNet.ScanSettings.TransferAllPages">
            <summary>
            The value to set to scan all available pages.
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.AutoSize">
            <summary>
            Twain spec ICAP_AUTOSIZE values Added 2.0 
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.CapabilityArrayValue">
            <summary>
            /* TWON_ARRAY. Container for array of values (a simplified TW_ENUMERATION) */
            typedef struct {
               TW_UINT16  ItemType;
               TW_UINT32  NumItems;    /* How many items in ItemList           */
               TW_UINT8   ItemList[1]; /* Array of ItemType values starts here */
            } TW_ARRAY, FAR * pTW_ARRAY;
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.CapabilityArrayValue._valueStart">
            <summary>
            The start of the array values
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.CapabilityEnumValue">
            <summary>
            /* TWON_ENUMERATION. Container for a collection of values. */
            typedef struct {
               TW_UINT16  ItemType;
               TW_UINT32  NumItems;     /* How many items in ItemList                 */
               TW_UINT32  CurrentIndex; /* Current value is in ItemList[CurrentIndex] */
               TW_UINT32  DefaultIndex; /* Powerup value is in ItemList[DefaultIndex] */
               TW_UINT8   ItemList[1];  /* Array of ItemType values starts here       */
            } TW_ENUMERATION, FAR * pTW_ENUMERATION;
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.CapabilityEnumValue._valueStart">
            <summary>
            The start of the array values
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.CapabilityOneValue">
            <summary>
            /* TWON_ONEVALUE. Container for one value. */
            typedef struct {
               TW_UINT16  ItemType;
               TW_UINT32  Item;
            } TW_ONEVALUE, FAR * pTW_ONEVALUE;
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.Compression">
            <summary>
            Twain spec ICAP_COMPRESSION values.
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.ConditionCode.Bummer">
            <summary>
            Unknown failure.
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.ConditionCode.MaxConntions">
            <summary>
            Data source is already connected to the maximum number of connections.
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.ConditionCode.OperationError">
            <summary>
            Data source or data source manager reported an error.
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.ConditionCode.BadProtocol">
            <summary>
            Unknown data group/data argument type combination.
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.ConditionCode.SequenceError">
            <summary>
            Message out of expected sequence.
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.ConditionCode.BadDestination">
            <summary>
            Unknown destination application/source.
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.ConditionCode.CapabilityBadOperation">
            <summary>
            Operation not supported by capability.
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.ConditionCode.Denied">
            <summary>
            File system operation is denied.
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.FlipRotation">
            <summary>
            Twain spec ICAP_FLIPROTATION values.
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.ImageFileFormat">
            <summary>
            Twain spec ICAP_IMAGEFILEFORMAT values.
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.ImageMemXfer">
            <summary>
            used with  DG_CONTROL / DAT_IMAGEMEMXFER / MSG_GET
            typedef struct {
                TW_UINT16 Compression;
                TW_UINT32 BytesPerRow;
                TW_UINT32 Columns;
                TW_UINT32 Rows;
                TW_UINT32 XOffset;
                TW_UINT32 YOffset;
                TW_UINT32 BytesWritten;
                TW_MEMORY Memory;
            } TW_IMAGEMEMXFER, FAR* pTW_IMAGEMEMXFER;
            
            typedef struct {
                TW_UINT32 Flags;
                TW_UINT32 Length;
                TW_MEMREF TheMem;
            } TW_MEMORY, FAR* pTW_MEMORY;
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.MemoryFlags">
            <summary>
            Encodes which entity releases the buffer and how the buffer is referenced. 
            (page 8-47)
            
            TWMF_APPOWNS 0x1
            TWMF_DSMOWNS 0x2
            TWMF_DSOWNS 0x4
            TWMF_POINTER 0x8
            TWMF_HANDLE 0x10
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.Orientation">
            <summary>
            Twain spec ICAP_ORIENTATION values.
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.Orientation.Default">
            <summary>
            Default is zero rotation, same as Portrait.
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.Orientation.Auto">
            <summary>
            Following require Twain 2.0+. 
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.PageType.A4">
            <summary>
            A4 ad A4Letter
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.PageType.JISB5">
            <summary>
            JISB5 and B5Letter
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.PageType.ISOB4">
            <summary>
            ISOB4 and B4
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.PageType.ISOB6">
            <summary>
            ISOB6 and B6
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.PageType.ISOB3">
            <summary>
            ISOB3 and B3
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.SetupMemXfer">
            <summary>
            used with  DG_CONTROL / DAT_SETUPMEMXFER / MSG_GET
            typedef struct {
                TW_UINT32 MinBufSize /* Minimum buffer size in bytes */
                TW_UINT32 MaxBufSize /* Maximum buffer size in bytes */
                TW_UINT32 Preferred /* Preferred buffer size in bytes */
            } TW_SETUPMEMXFER, FAR* pTW_SETUPMEMXFER;
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.SetupMemXfer.MinBufSize">
            <summary>
            Minimum buffer size in bytes
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.SetupMemXfer.MaxBufSize">
            <summary>
             Maximum buffer size in bytes
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.SetupMemXfer.Preferred">
            <summary>
            Preferred buffer size in bytes
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.TransferMechanism">
            <summary>
            ICAP_XFERMECH values (Image Transfer)
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.TwainCapability">
            <summary>
            /* DAT_CAPABILITY. Used by application to get/set capability from/in a data source. */
            typedef struct {
               TW_UINT16  Cap; /* id of capability to set or get, e.g. CAP_BRIGHTNESS */
               TW_UINT16  ConType; /* TWON_ONEVALUE, _RANGE, _ENUMERATION or _ARRAY   */
               TW_HANDLE  hContainer; /* Handle to container of type Dat              */
            } TW_CAPABILITY, FAR * pTW_CAPABILITY;
            </summary>
        </member>
        <member name="M:TwainDotNet.TwainNative.Twain32Native.DsmParent(TwainDotNet.TwainNative.Identity,System.IntPtr,TwainDotNet.TwainNative.DataGroup,TwainDotNet.TwainNative.DataArgumentType,TwainDotNet.TwainNative.Message,System.IntPtr@)">
            <summary>
            DSM_Entry with a window handle as the parent parameter.
            </summary>
            <param name="origin"></param>
            <param name="zeroPtr">Should always be set to null.</param>
            <param name="dg"></param>
            <param name="dat"></param>
            <param name="msg"></param>
            <param name="windowHandle">The window handle that will act as the source's parent.</param>
            <returns></returns>
        </member>
        <member name="M:TwainDotNet.TwainNative.Twain32Native.DsmIdentity(TwainDotNet.TwainNative.Identity,System.IntPtr,TwainDotNet.TwainNative.DataGroup,TwainDotNet.TwainNative.DataArgumentType,TwainDotNet.TwainNative.Message,TwainDotNet.TwainNative.Identity)">
            <summary>
            DSM_Entry with an identity as the parameter
            </summary>
            <param name="origin"></param>
            <param name="zeroPtr">Should always be set to null.</param>
            <param name="dg"></param>
            <param name="dat"></param>
            <param name="msg"></param>
            <param name="idds">The identity structure.</param>
            <returns></returns>
        </member>
        <member name="M:TwainDotNet.TwainNative.Twain32Native.DsUserInterface(TwainDotNet.TwainNative.Identity,TwainDotNet.TwainNative.Identity,TwainDotNet.TwainNative.DataGroup,TwainDotNet.TwainNative.DataArgumentType,TwainDotNet.TwainNative.Message,TwainDotNet.TwainNative.UserInterface)">
            <summary>
            DSM_Entry with a user interface parameter. Acts on the data source.
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.TwainVersion">
            <summary>
            TW_VERSION
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.Capabilities.A8_Calibrate">
            <summary>
            Special value for A8 scanner calibration.
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.ContainerType">
            <summary>
            TWON_...
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.PendingXfers">
            <summary>
            /* DAT_PENDINGXFERS. Used with MSG_ENDXFER to indicate additional data. */
            typedef struct {
               TW_UINT16 Count;
               union {
                  TW_UINT32 EOJ;
                  TW_UINT32 Reserved;
               };
            } TW_PENDINGXFERS, FAR *pTW_PENDINGXFERS;
            </summary>
        </member>
        <member name="T:TwainDotNet.TwainNative.UserInterface">
            <summary>
            DAT_USERINTERFACE. Coordinates UI between application and data source. 
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.UserInterface.ShowUI">
            <summary>
            TRUE if DS should bring up its UI
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.UserInterface.ModalUI">
            <summary>
            For Mac only - true if the DS's UI is modal
            </summary>
        </member>
        <member name="F:TwainDotNet.TwainNative.UserInterface.ParentHand">
            <summary>
            For windows only - Application window handle
            </summary>
        </member>
        <member name="M:TwainDotNet.Twain.#ctor(TwainDotNet.IWindowsMessageHook)">
            <summary>
            Twain dll的最外層。當建構子完成，代表進入twain state 3，接下來就可以去open data souse了。
            </summary>
            <param name="messageHook"></param>
        </member>
        <member name="E:TwainDotNet.Twain.ScanningComplete">
            <summary>
            Notification that the scanning has completed.
            </summary>
        </member>
        <member name="M:TwainDotNet.Twain.StartScanning(TwainDotNet.ScanSettings)">
            <summary>
            Starts scanning.
            </summary>
        </member>
        <member name="M:TwainDotNet.Twain.SelectSource">
            <summary>
            Shows a dialog prompting the use to select the source to scan from.
            </summary>
        </member>
        <member name="M:TwainDotNet.Twain.SelectSource(System.String)">
            <summary>
            Selects a source based on the product name string.
            </summary>
            <param name="sourceName">The source product name.</param>
            <exception cref="T:TwainDotNet.TwainException">Thrown when DataSource.GetSource() cannot enumerate next source.</exception>
        </member>
        <member name="M:TwainDotNet.Twain.IsPaperOn">
            <summary>
            偵測有沒有紙，需要先select一個data source。
            </summary>
            <returns></returns>
        </member>
        <member name="M:TwainDotNet.Twain.CalibrateA8">
            <summary>
            校正A8，需要先select一個data source (A8)。
            </summary>
            <returns></returns>
        </member>
        <member name="M:TwainDotNet.Twain.A8NeedCalibrate">
            <summary>
            A8是否需要校正，需要先select一個data source (A8)。
            </summary>
            <returns></returns>
        </member>
        <member name="P:TwainDotNet.Twain.DefaultSourceName">
            <summary>
            Gets the product name for the default source.
            </summary>
        </member>
        <member name="P:TwainDotNet.Twain.SourceNames">
            <summary>
            Gets a list of source product names.
            </summary>
        </member>
    </members>
</doc>
